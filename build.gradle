buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
  }
}

// Common Project Configuration -----------------------------------------------

allprojects {
  group = 'software.amazon.samples'
  version = '0.0.1'
  repositories {
    mavenLocal()
    maven { url 'https://packages.confluent.io/maven/' }
    mavenCentral()
  }
}

subprojects {
  apply plugin: 'java'
  java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
  }
  clean {
    delete 'cdk.out'
  }
}

// Dependency Versions --------------------------------------------------------

ext {
  awsJavaSdkVersion = '1.11.756'
  cdkVersion = '1.31.0'
  elasticsearchVersion = '7.4.2' // 7.4.2 lines up with Open Distro for Elasticsearch 1.4.0
  gsonVersion = '2.8.5'
  junitVersion = '4.12'
  kafkaVersion = '2.3.0'
  logbackVersion = '1.2.3'
  log4jToSlf4jBrigeVersion = '2.13.0'
  simpleSourcingVersion = '0.2.7'
  sparkFrameworkVersion = '2.8.0'
  javaxValidationVersion = '2.0.1.Final'
}

// Kafka imports log4j, dropping this to be replaced by log4j-over-slf4j
configurations.all {
  exclude group: "org.slf4j", module: "slf4j-log4j12"
  exclude group: "log4j", module: "log4j"
}

// Sub Project Configurations -------------------------------------------------

project(':cdk-pipeline') {
  apply plugin: 'application'
  dependencies {
    implementation "software.amazon.awscdk:codebuild:${cdkVersion}"
    implementation "software.amazon.awscdk:codepipeline:${cdkVersion}"
    implementation "software.amazon.awscdk:codepipeline-actions:${cdkVersion}"
    implementation "software.amazon.awscdk:ecr:${cdkVersion}"
    implementation "software.amazon.awscdk:iam:${cdkVersion}"
    implementation "software.amazon.awscdk:s3:${cdkVersion}"
    implementation "software.amazon.awscdk:secretsmanager:${cdkVersion}"
  }
  application {
    mainClassName = 'software.amazon.samples.EventSourcingPipelineApp'
  }
}

project(':cdk-infra') {
  apply plugin: 'application'
  dependencies {
    implementation "software.amazon.awscdk:cdk-assets:${cdkVersion}"
    implementation "software.amazon.awscdk:ec2:${cdkVersion}"
    implementation "software.amazon.awscdk:ecr:${cdkVersion}"
    implementation "software.amazon.awscdk:ecs:${cdkVersion}"
    implementation "software.amazon.awscdk:ecs-patterns:${cdkVersion}"
    implementation "software.amazon.awscdk:elasticsearch:${cdkVersion}"
    implementation "software.amazon.awscdk:msk:${cdkVersion}"
    implementation "software.amazon.awscdk:s3:${cdkVersion}"
  }
  application {
    mainClassName = 'software.amazon.samples.EventSourcingInfraApp'
  }
}

project(':common') {
  dependencies {
    implementation "ch.qos.logback:logback-classic:${logbackVersion}"
    implementation "javax.validation:validation-api:${javaxValidationVersion}"
    testImplementation "junit:junit:${junitVersion}"
  }
}

project(':read-api') {
  apply plugin: 'application'
  apply plugin: 'com.github.johnrengelman.shadow'
  dependencies {
    implementation project(':common')
    implementation "com.sparkjava:spark-core:${sparkFrameworkVersion}"
    implementation "com.amazonaws:aws-java-sdk-core:${awsJavaSdkVersion}"
    implementation "org.elasticsearch.client:elasticsearch-rest-high-level-client:${elasticsearchVersion}"
    implementation "org.elasticsearch.client:elasticsearch-rest-client:${elasticsearchVersion}"
    implementation "org.elasticsearch:elasticsearch:${elasticsearchVersion}"
    implementation "com.google.code.gson:gson:${gsonVersion}"
    implementation "ch.qos.logback:logback-classic:${logbackVersion}"
    implementation 'org.slf4j:log4j-over-slf4j:1.7.30'
    testImplementation "junit:junit:${junitVersion}"
  }
  application {
    mainClassName = 'software.amazon.samples.read.StartReadApi'
  }
}

project(':write-api') {
  apply plugin: 'application'
  apply plugin: 'com.github.johnrengelman.shadow'
  dependencies {
    implementation project(':common')
    implementation "com.amazonaws:aws-java-sdk-kafka:${awsJavaSdkVersion}"
    implementation "io.simplesource:simplesource-command-api:${simpleSourcingVersion}"
    implementation "io.simplesource:simplesource-command-kafka:${simpleSourcingVersion}"
    implementation "io.simplesource:simplesource-command-serialization:${simpleSourcingVersion}"
    implementation "com.sparkjava:spark-core:${sparkFrameworkVersion}"
    implementation "ch.qos.logback:logback-classic:${logbackVersion}"
    implementation 'org.apache.httpcomponents:httpcomponents-client:4.5.12'
    implementation 'org.slf4j:log4j-over-slf4j:1.7.30'
    testImplementation "junit:junit:${junitVersion}"
  }
  application {
    mainClassName = 'software.amazon.samples.write.StartWriteApi'
  }
}

project(':projections') {
  apply plugin: 'application'
  apply plugin: 'com.github.johnrengelman.shadow'
  dependencies {
    implementation project(':common')
    implementation "com.sparkjava:spark-core:${sparkFrameworkVersion}"
    implementation "com.amazonaws:aws-java-sdk-core:${awsJavaSdkVersion}"
    implementation "com.amazonaws:aws-java-sdk-kafka:${awsJavaSdkVersion}"
    implementation "io.simplesource:simplesource-command-api:${simpleSourcingVersion}"
    implementation "io.simplesource:simplesource-command-kafka:${simpleSourcingVersion}"
    implementation "io.simplesource:simplesource-command-serialization:${simpleSourcingVersion}"
    implementation "org.elasticsearch.client:elasticsearch-rest-high-level-client:${elasticsearchVersion}"
    implementation "org.elasticsearch.client:elasticsearch-rest-client:${elasticsearchVersion}"
    implementation "org.elasticsearch:elasticsearch:${elasticsearchVersion}"
    implementation "org.apache.kafka:kafka-clients:${kafkaVersion}"
    implementation "ch.qos.logback:logback-classic:${logbackVersion}"
    implementation 'org.slf4j:log4j-over-slf4j:1.7.30'
    testImplementation "junit:junit:${junitVersion}"
  }
  application {
    mainClassName = 'software.amazon.samples.projections.StartProjectionsService'
  }
}
